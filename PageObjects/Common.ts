import { ElementFinder, By, element } from "protractor";

export class CommonLocate {

    momentaLogo: ElementFinder;
    clientTab: ElementFinder;
    helloText: ElementFinder;
    automationFolder: ElementFinder;
    folderSprint16: ElementFinder;
    folderSprint7: ElementFinder;
    cancelEdit: ElementFinder;
    myJourneyPage: ElementFinder;
    shimmerLoadActivity: ElementFinder;
    btnContinue: ElementFinder;
    folderSprint14: ElementFinder;
    folderSprint20: ElementFinder;
    automationjourneyMohit: ElementFinder;
    automationFolderOnLeftMenu: ElementFinder;
    btnSaveJourney: ElementFinder;
    btnPublishJourney: ElementFinder;
    btnCancelJourney: ElementFinder;
    toastMessagePublishSuccess: ElementFinder;
    toastMessageSaveSuccess: ElementFinder;
    toastMessageSaveSuccessDiscussion: ElementFinder;
    resourcesTabParticipant: ElementFinder;
    sanityFolder: ElementFinder;
    e2eBackUpFolder: ElementFinder;
    addModuleToJourney: ElementFinder;
    journeyModuleTitle: ElementFinder;
    journeyModuleShortName: ElementFinder;
    journeyModuleDescription: ElementFinder;
    journeyModulePoints: ElementFinder;
    saveModule: ElementFinder;
    journeyFlowSaveBtn: ElementFinder;
    journeyFlowPublishBtn: ElementFinder;
    journeyFlowExithBtn: ElementFinder;
    btnAddActivityToModule: ElementFinder;
    ddActivityType: ElementFinder;
    activityTypeContentObject: ElementFinder;
    activityTitle: ElementFinder;
    activityDescription: ElementFinder;
    btnLinkActivityInActivityMenu: ElementFinder;
    linkActivityPetronasTab: ElementFinder;
    linkActivityPetronasTab2: ElementFinder;
    searchActivityToBeLinkedInput: ElementFinder;
    searchIcon: ElementFinder;
    btnSave_AddActivity: ElementFinder;
    btnSaveOnRegistrationPage: ElementFinder;
    btnPublishOnRegistrationPage: ElementFinder;
    btnCancelOnRegistrationPage: ElementFinder;
    addStageToJourney:ElementFinder;
    stageTitle: ElementFinder;
    stageShortName: ElementFinder;
    btnCreateStage: ElementFinder;
    addModuleTostage: ElementFinder;
    participantActionsTab:ElementFinder;
    activityTypeQuiz: ElementFinder;
    socialForum:ElementFinder;
    btnEditActivity: ElementFinder;
    clientCollectionTab: ElementFinder;
    btnDelete:ElementFinder;

    constructor() {

        this.momentaLogo = element(By.xpath("//img[contains(@src,'Momenta')]"));
        this.clientTab = element(By.id("mat-tab-label-1-1"));
        this.helloText = element(By.xpath("//p[contains(text(),'Hello,')]"));
        this.automationFolder = element(By.xpath("//p[contains(text(),'Automation Folder_DONOT DELETE')]/../../.."));
        this.folderSprint16 = element(By.xpath("//p[contains(text(),'Sprint 16')]/../../.."));
        this.folderSprint7 = element(By.xpath("//p[contains(text(),'Sprint 7')]/../../.."));
        this.folderSprint14 = element(By.xpath("//p[contains(text(),'Sprint 14')]/../../.."));
        this.folderSprint20 = element(By.xpath("//p[contains(text(),'Sprint 20')]/../../.."));
        this.cancelEdit = element(By.xpath("//mat-dialog-container//button[@name='cancel' and not(contains(@class,'close'))]"));
        this.myJourneyPage = element(By.xpath("//span[contains(text(),'My Journey')]//ancestor::a[@aria-label='My Journey']"));
        this.shimmerLoadActivity = element(By.xpath("//h3[contains(@class,'animate')]"));
        this.btnContinue = element(By.xpath("//button[contains(@name,'Continue')]"));
        this.automationjourneyMohit = element(By.xpath("//p[contains(text(),'Automation Journey Mohit')]/../../.."));
        this.automationFolderOnLeftMenu = element(By.xpath("//div[contains(text(),' Automation Folder_DONOT')]"));
        this.btnSaveJourney = element(By.xpath("//button[contains(text(),'Save')]"));
        this.btnPublishJourney = element(By.xpath("//button[contains(text(),'Publish')]"));
        this.btnCancelJourney = element(By.xpath("//button[contains(text(),'EXIT')]"));
        this.toastMessageSaveSuccess = element(By.xpath("//div[@id='toast-container']//div[contains(text(),'Success')]"));
        this.toastMessageSaveSuccessDiscussion = element(By.xpath("//div[@id='toast-container']//div[contains(text(),'success')]"));
        this.toastMessagePublishSuccess = element(By.xpath("//div[@id='toast-container']//div[contains(text(),'success')]"));
        this.resourcesTabParticipant = element(By.xpath("//a[contains(@class,'resources')]"));
        this.sanityFolder = element(By.xpath("//p[contains(text(),'Individual Content')]/../../.."));
        this.e2eBackUpFolder = element(By.xpath("//p[contains(text(),'BackUp')]/../../.."));
        //Journey
        this.addModuleToJourney = element(By.css("button[name*='add module']"));
        this.journeyModuleTitle = element(By.css("input[name='title']"));
        this.journeyModuleShortName = element(By.css("input[name*='shortName']"));
        this.journeyModuleDescription = element(By.css("textarea[name*='description']"));
        this.journeyModulePoints = element(By.css("input[name*='points']"));
        this.saveModule = element(By.css("button[name*='journey-save']:nth-child(2)"));
        this.journeyFlowSaveBtn = element(By.css("button[name='save']"));
        this.journeyFlowPublishBtn = element(By.css("button[name='publish']"));
        this.journeyFlowExithBtn = element(By.css("button[name='cancel']"));
        this.btnAddActivityToModule = element(By.css("button[name*='add-activity']"));
        this.ddActivityType = element(By.css("select[name*='Activity Type']"));
        this.activityTypeContentObject = element(By.css("select[name*='Activity Type'] option[value*='contentObject']"));
        this.activityTypeQuiz = element(By.css("select[name*='Activity Type'] option[value*='quiz']"));
        this.activityTitle = element(By.css("input[name*='title']"));
        this.activityDescription = element(By.css("textarea[name*='description']"));
        this.btnSave_AddActivity = element(By.css("button[name*='journey-save']:nth-child(2)"));
        this.btnLinkActivityInActivityMenu = element(By.css("button[name='edit']:nth-child(2)"));
        this.clientCollectionTab = element(By.xpath("//div[contains(text(),'Client')]/.."));
        this.linkActivityPetronasTab = element(By.xpath("//span[text() = 'petronas ' or text() = 'petronas']/.."));
        this.linkActivityPetronasTab2 = element(By.xpath("//div[text() = 'petronas ' or text() = 'petronas']/.."));
        //this.searchActivityToBeLinkedInput = element(By.css("input[name*='Search Collection']"));
        this.searchActivityToBeLinkedInput = element(By.xpath("//span[contains(text(),'Automation Folder')]/preceding::input[contains(@name,'search collection')]"));
        this.searchIcon = element(By.css("i[class*='icon-search']"));
        this.btnSaveOnRegistrationPage = element(By.css("button[name='save']"));
        this.btnPublishOnRegistrationPage = element(By.css("button[name='publish']"));
        this.btnCancelOnRegistrationPage = element(By.css("button[name='cancel']"));
        this.addStageToJourney = element(By.css("button[name*='add stage']"));
        this.stageTitle = element(By.css("input[name*='title']"));
        this.stageShortName = element(By.css("input[name*='shortName']"));
        this.btnCreateStage = element(By.css("button[name*='journey-save']:nth-child(2)"));
        this.addModuleTostage = element(By.css("button[name*='add-module']"));
        this.participantActionsTab = element(By.css("a[class*='actions']"));
        this.socialForum=element(By.xpath("//div[contains(text(),'Discussion_Title_01')]"));
        this.btnEditActivity = element(By.xpath("//button[contains(text(),'Edit Activity')]"));
        this.btnDelete=element(By.xpath("//button[@name='delete']"));
    }
}